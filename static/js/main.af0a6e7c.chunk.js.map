{"version":3,"sources":["components/Header.js","components/Current.js","components/DetailedDaily.js","components/DetailedHourly.js","loading2.gif","App.js","index.js"],"names":["Header","props","useState","city","setCity","className","type","placeholder","onChange","event","target","value","onClick","getCity","style","color","fontSize","fontWeight","Current","weather","current","name","sys","country","display","Math","round","main","temp","src","icon","alt","margin","minMax","min","max","rain","wind","speed","deg","humidity","pressure","visibility","DetailedDaily","date","Date","days","data","map","item","index","marginBottom","getDay","width","pop","DetailedHourly","hour","setHour","useEffect","d","getHours","App","isLoading","setIsLoading","currentWeather","setCurrentWeather","detailedWeather","setDetailedWeather","a","fetchCurrent","currentData","fetchDetailed","coord","lat","lon","detailedData","console","log","getCityName","cityName","loading","daily","hourly","location","fetch","keys","response","json","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af0a6e7c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./Header.css\";\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\n\nexport default function Header(props) {\n  const [city, setCity] = useState(\"Budapest\");\n\n  const onChange = (event) => {\n    setCity(event.target.value);\n  };\n\n  const onSubmit = () => {\n    props.getCity(city);\n  };\n\n  return (\n    <div className={\"Header\"}>\n      <div className={\"searchBar\"}>\n        <input\n          type={\"text\"}\n          className={\"locationInput\"}\n          placeholder={\"Enter city name\"}\n          onChange={onChange}\n        />\n        <button onClick={onSubmit} className={\"searchButton\"}>\n          <i\n            className=\"bi bi-search\"\n            style={{\n              color: \"white\",\n              fontSize: \"1.6em\",\n              fontWeight: \"bold\",\n            }}\n          />\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"../style.css\";\nimport \"./Current.css\";\n\nexport default function Current(props) {\n  const weather = props.current;\n  return (\n    <div className=\"Tab Current\">\n      <h2 className=\"currentElement\">\n        {weather.name} ({weather.sys.country})\n      </h2>\n      <div className=\"currentElement currentTemp\">\n        <h1 className=\"currentElement\" style={{ display: \"inline-block\" }}>\n          {Math.round(weather.main.temp)}°\n        </h1>\n        <img\n          src={\n            \"http://openweathermap.org/img/wn/\" +\n            weather.weather[0].icon +\n            \"@2x.png\"\n          }\n          alt={\"icon\"}\n        />\n      </div>\n      <div className=\"currentElement minMax\">\n        Min: <h3 style={{ margin: \"0\" }}>{Math.round(props.minMax.min)}°</h3> /\n        Max: <h3 style={{ margin: \"0\" }}>{Math.round(props.minMax.max)}°</h3>\n      </div>\n      <div className=\"currentElement\">\n        Weather: <h3 style={{ margin: \"0\" }}>{weather.weather[0].main}</h3>\n      </div>\n      <div className=\"currentElement\">\n        Precipitation: <h3 style={{ margin: \"0\" }}>{props.rain * 100}%</h3>\n      </div>\n      <div className=\"currentElement\">\n        Wind:{\" \"}\n        <h3 style={{ margin: \"0\" }}>\n          {Math.round(weather.wind.speed * 36) / 10} km/h {weather.wind.deg}°\n        </h3>\n      </div>\n      <div className=\"currentElement\">\n        Humidity: <h3 style={{ margin: \"0\" }}>{weather.main.humidity}%</h3>\n      </div>\n      <div className=\"currentElement\">\n        Pressure: <h3 style={{ margin: \"0\" }}>{weather.main.pressure} hPa</h3>\n      </div>\n      <div className=\"currentElement\">\n        Visibility:{\" \"}\n        <h3 style={{ margin: \"0\" }}>{weather.visibility / 1000} km</h3>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"../style.css\";\nimport \"./DetailedDaily.css\";\n\nexport default function DetailedDaily(props) {\n  const date = new Date();\n  const days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n\n  return (\n    <div className=\"Tab dailyTab\">\n      <h1>Daily Forecast</h1>\n      <div className=\"hourlyContainer\">\n        {props.data.map((item, index) => {\n          return (\n            <div className=\"hourlyItem\" key={index}>\n              <h2 style={{ marginBottom: \"10px\" }}>\n                {index === 0 ? \"Today\" : days[(date.getDay() + index) % 7]}\n              </h2>\n              <div className=\"hourlyDetails\">\n                <h3>\n                  {Math.round(item.temp.min)}° / {Math.round(item.temp.max)}°\n                </h3>\n                <img\n                  src={\n                    \"http://openweathermap.org/img/wn/\" +\n                    item.weather[0].icon +\n                    \"@2x.png\"\n                  }\n                  alt={\"icon\"}\n                  style={{ width: \"50px\" }}\n                />\n                <span>{item.weather[0].main}</span>\n                <span>{Math.round(item.pop * 10) * 10}%</span>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"../style.css\";\nimport \"./DetailedHourly.css\";\n\nexport default function DetailedHourly(props) {\n  const [hour, setHour] = useState();\n\n  useEffect(() => {\n    const d = new Date();\n    setHour(d.getHours());\n  });\n\n  return (\n    <div className=\"Tab hourlyTab\">\n      <h1>Hourly Forecast</h1>\n      <div className=\"DetailedHourly\">\n        {props.data.map((item, index) => {\n          return (\n            <div className=\"detailItem\" key={index}>\n              <h2 style={{ marginBottom: \"10px\" }}>\n                {index === 0 ? \"Now\" : (hour + index) % 24}\n              </h2>\n              <div className=\"hourlyDetails\">\n                <h3>{Math.round(item.temp)}°</h3>\n                <div>\n                  <img\n                    src={\n                      \"http://openweathermap.org/img/wn/\" +\n                      item.weather[0].icon +\n                      \"@2x.png\"\n                    }\n                    style={{ width: \"50px\" }}\n                    alt={\"icon\"}\n                  />\n                  <span className=\"hourlySpan\">\n                    {item.pop < 0.1 ? \"\" : Math.round(item.pop * 10) * 10 + \"%\"}\n                  </span>\n                  <span className=\"hourlySpan\">{item.weather[0].main}</span>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/loading2.942eaa34.gif\";","import React, { useEffect, useState } from \"react\";\nimport * as keys from \"./apikey.json\";\nimport Header from \"./components/Header\";\nimport Current from \"./components/Current\";\nimport DetailedDaily from \"./components/DetailedDaily\";\nimport DetailedHourly from \"./components/DetailedHourly\";\nimport \"./style.css\";\nimport \"./mobileStyle.css\";\nimport loading from \"./loading2.gif\";\n\nexport default function App() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [city, setCity] = useState(\"Budapest\");\n  const [currentWeather, setCurrentWeather] = useState({});\n  const [detailedWeather, setDetailedWeather] = useState({});\n\n  useEffect(() => {\n    (async () => {\n      setIsLoading(true);\n      const currentData = await fetchCurrent(city);\n      const detailedData = await fetchDetailed(\n        currentData.coord.lat,\n        currentData.coord.lon\n      );\n      setCurrentWeather(currentData);\n      console.log(detailedData);\n      setDetailedWeather(detailedData);\n      setIsLoading(false);\n    })();\n  }, [city]);\n\n  const getCityName = async (cityName) => {\n    setCity(cityName);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"grid\">\n        <Header getCity={getCityName} />\n        {isLoading ? <img src={loading} /> : \"\"}\n        {isLoading ? (\n          \"\"\n        ) : (\n          <Current\n            current={currentWeather}\n            minMax={detailedWeather.daily[0].temp}\n            rain={detailedWeather.daily[0].pop}\n          />\n        )}\n        {isLoading ? \"\" : <DetailedHourly data={detailedWeather.hourly} />}\n        {isLoading ? \"\" : <DetailedDaily data={detailedWeather.daily} />}\n      </div>\n    </div>\n  );\n}\n\nasync function fetchCurrent(location) {\n  const response = await fetch(\n    \"https://api.openweathermap.org/data/2.5/weather?q=\" +\n      location +\n      \"&units=metric&appid=\" +\n      keys.weather_key\n  );\n  const currentData = await response.json();\n  return currentData;\n}\n\nasync function fetchDetailed(lat, lon) {\n  const response = await fetch(\n    \"https://api.openweathermap.org/data/2.5/onecall?lat=\" +\n      lat +\n      \"&lon=\" +\n      lon +\n      \"&units=metric&exclude=current,minutely,alerts&appid=\" +\n      keys.weather_key\n  );\n  const detailedData = await response.json();\n  return detailedData;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './style.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}